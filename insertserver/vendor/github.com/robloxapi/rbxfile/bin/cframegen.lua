-- This file generates the content of cframe.go

local data = ''
local function write(f, ...)
	data = data .. string.format(f, ...)
end

local nums = {}
local cframes = {}
local children = game:GetService('ServerStorage'):GetChildren()
for i = 1, #children do
	local child = children[i]
	if child:IsA('CFrameValue') then
		local num = tonumber(child.Name:match('^0x(%x%x)$'), 16)
		if num then
			nums[#nums+1] = num

			local c = {select(4, child.Value:components())}
			for i = 1, #c do
				local n = c[i]
				if n == 0 and 1/n < 0 then
					c[i] = 'n0'
				elseif n == 0 then
					c[i] = 'p0'
				elseif n == -1 then
					c[i] = 'n1'
				elseif n == 1 then
					c[i] = 'p1'
				else
					c[i] = string.format('%g', n)
				end
			end
			cframes[#cframes+1] = table.concat(c, ', ')
		end
	end
end

if #nums ~= 256 then
	error("expected 256 number values, got " .. #nums)
end

if #cframes ~= 256 then
	error("expected 256 CFrame values, got " .. #cframes)
end

write('package bin\n')
write('\n')
write('// This file was automatically generated by cframegen.lua\n')
write('\n')
write('import "math"\n')
write('\n')
write('var n0 = float32(math.Copysign(0, -1))\n')
write('var p0 = float32(math.Copysign(0, 1))\n')
write('var n1 = float32(math.Copysign(1, -1))\n')
write('var p1 = float32(math.Copysign(1, 1))\n')
write('\n')
write('var cframeSpecialMatrix = map[uint8][9]float32{\n')
for i = 1, #nums do
	write('\t0x%02X: {%s},\n', nums[i], cframes[i])
end
write('}\n')
write('\n')
write('var cframeSpecialNumber = map[[9]float32]uint8{\n')
for i = 1, #nums do
	write('\t[9]float32{%s}: 0x%02X,\n', cframes[i], nums[i])
end
write('}')

print(data)
